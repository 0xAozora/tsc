name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  
 
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v1
      with:
        # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
        version: v1.30
        args: -v
  golangci-lint--enable-all:
    name: golangci-lint --enable-all (allowed to fail)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: golangci-lint --enable-all (allowed to fail)
      uses: golangci/golangci-lint-action@v1
      continue-on-error: true
      with:
        # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version. 
        version: v1.30
        args: -v --enable-all

  test:
    name: test
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.11, 1.12, ^1.13]

    runs-on: ${{ matrix.platform }}
    
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...


    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .
    
    - name: Full Test
      run: |
        printenv
        go version
        go list -m all
        go vet ./...
        go test -v ./...
